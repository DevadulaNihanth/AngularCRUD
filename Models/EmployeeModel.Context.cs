//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AngularCRUD.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EmployeeEntities : DbContext
    {
        public EmployeeEntities()
            : base("name=EmployeeEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<EmployeeDetails> EmployeeDetails { get; set; }
    
        public virtual int usp_delete_EmployeeDetails(Nullable<int> empID)
        {
            var empIDParameter = empID.HasValue ?
                new ObjectParameter("EmpID", empID) :
                new ObjectParameter("EmpID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_delete_EmployeeDetails", empIDParameter);
        }
    
        public virtual int usp_save_EmployeeDetails(Nullable<int> empID, string empName, Nullable<decimal> basicPay, Nullable<decimal> allowance, ObjectParameter outID)
        {
            var empIDParameter = empID.HasValue ?
                new ObjectParameter("EmpID", empID) :
                new ObjectParameter("EmpID", typeof(int));
    
            var empNameParameter = empName != null ?
                new ObjectParameter("EmpName", empName) :
                new ObjectParameter("EmpName", typeof(string));
    
            var basicPayParameter = basicPay.HasValue ?
                new ObjectParameter("BasicPay", basicPay) :
                new ObjectParameter("BasicPay", typeof(decimal));
    
            var allowanceParameter = allowance.HasValue ?
                new ObjectParameter("Allowance", allowance) :
                new ObjectParameter("Allowance", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_save_EmployeeDetails", empIDParameter, empNameParameter, basicPayParameter, allowanceParameter, outID);
        }
    
        public virtual ObjectResult<usp_view_EmployeeDetails_Result> usp_view_EmployeeDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_view_EmployeeDetails_Result>("usp_view_EmployeeDetails");
        }
    
        public virtual ObjectResult<usp_viewbyid_EmployeeDetails_Result> usp_viewbyid_EmployeeDetails(Nullable<int> empID)
        {
            var empIDParameter = empID.HasValue ?
                new ObjectParameter("EmpID", empID) :
                new ObjectParameter("EmpID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_viewbyid_EmployeeDetails_Result>("usp_viewbyid_EmployeeDetails", empIDParameter);
        }
    }
}
